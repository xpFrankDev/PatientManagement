
package Ventanas;

import Clases.Paciente;
import Clases.RegistroPaciente;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author parra
 */
public class ListarPacientes extends javax.swing.JFrame {

    DefaultTableModel modelo;
    newNotaEvolucion notaEvo;
    Paciente paciente = new Paciente();
    ArrayList<Paciente> pacientes = new ArrayList();
    String uso = "";
    Index index;

    public ListarPacientes() {
        initComponents();
        modelo = (DefaultTableModel) tabla.getModel();
        barra.setVisible(false);
        this.index =index;
        new Thread(this::actualizarValores).start();
        panelDatos.setVisible(false);
    }

    public ListarPacientes(Index index,Paciente paciente, String uso) {
        initComponents();
        modelo = (DefaultTableModel) tabla.getModel();
        this.paciente = paciente;
        this.uso = uso;
        this.index =index;
        barra.setVisible(false);
        panelDatos.setVisible(false);
        actualizarValores();

    }

    public ListarPacientes(Index index,newNotaEvolucion notaEvo, String uso) {
        initComponents();
        modelo = (DefaultTableModel) tabla.getModel();
        this.uso = uso;
        this.notaEvo = notaEvo;
        this.index =index;
        barra.setVisible(false);
        panelDatos.setVisible(false);
        actualizarValores();

    }

    public ListarPacientes(Index index,String uso) {
        initComponents();
        modelo = (DefaultTableModel) tabla.getModel();
        this.uso = uso;
        this.index =index;
        barra.setVisible(false);
        panelDatos.setVisible(false);
        actualizarValores();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo1 = new javax.swing.ButtonGroup();
        panelCentral = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nombreTxt = new rojeru_san.rsfield.RSTextFullRound();
        listaEsperaRadio = new rojerusan.RSRadioButton();
        todosRadio = new rojerusan.RSRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new rojerusan.RSTableMetro();
        rSButtonIconDos2 = new RSMaterialComponent.RSButtonIconDos();
        barra = new rojeru_san.rsprogress.RSProgressBarAnimated();
        panelDatos = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nombrePacienteLabel = new javax.swing.JLabel();
        fnacPacienteLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        codigoPacienteLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        generoPacienteLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        telefonoPacienteLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        grupoVulnerableLabel = new javax.swing.JLabel();
        rSButtonRoundEffect1 = new rojeru_san.rsbutton.RSButtonRoundEffect();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de Terapeutas");
        setUndecorated(true);
        setResizable(false);

        panelCentral.setBackground(new java.awt.Color(255, 255, 255));
        panelCentral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        btnSalir.setBackground(new java.awt.Color(59, 59, 59));
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_close_window_32px.png"))); // NOI18N
        btnSalir.setContentAreaFilled(false);
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalirMouseExited(evt);
            }
        });
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listado de Pacientes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Una vez encontrado el terapeuta, haga click 2 veces sobre el valor dentro de la tabla para elejirlo.");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Nombre / Código:");

        nombreTxt.setForeground(new java.awt.Color(0, 0, 0));
        nombreTxt.setBorderColor(new java.awt.Color(102, 102, 102));
        nombreTxt.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        nombreTxt.setPhColor(new java.awt.Color(0, 0, 0));
        nombreTxt.setPlaceholder("");
        nombreTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreTxtKeyReleased(evt);
            }
        });

        grupo1.add(listaEsperaRadio);
        listaEsperaRadio.setForeground(new java.awt.Color(0, 0, 0));
        listaEsperaRadio.setText("Lista de Espera");
        listaEsperaRadio.setColorCheck(new java.awt.Color(0, 102, 102));
        listaEsperaRadio.setColorUnCheck(new java.awt.Color(102, 102, 102));

        grupo1.add(todosRadio);
        todosRadio.setForeground(new java.awt.Color(0, 0, 0));
        todosRadio.setSelected(true);
        todosRadio.setText("Citados Conmigo");
        todosRadio.setColorCheck(new java.awt.Color(0, 102, 102));
        todosRadio.setColorUnCheck(new java.awt.Color(102, 102, 102));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Código", "Nombre", "SRQ Ingreso", "Teléfono", "Fecha Cita"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setBackgoundHead(new java.awt.Color(0, 102, 102));
        tabla.setBackgoundHover(new java.awt.Color(0, 153, 153));
        tabla.setColorBorderRows(new java.awt.Color(255, 255, 255));
        tabla.setColorSecondary(new java.awt.Color(255, 255, 255));
        tabla.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMinWidth(80);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(65);
            tabla.getColumnModel().getColumn(0).setMaxWidth(80);
            tabla.getColumnModel().getColumn(1).setMinWidth(125);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(110);
            tabla.getColumnModel().getColumn(1).setMaxWidth(125);
            tabla.getColumnModel().getColumn(3).setMinWidth(120);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(110);
            tabla.getColumnModel().getColumn(3).setMaxWidth(120);
            tabla.getColumnModel().getColumn(4).setMinWidth(110);
            tabla.getColumnModel().getColumn(4).setPreferredWidth(110);
            tabla.getColumnModel().getColumn(4).setMaxWidth(110);
            tabla.getColumnModel().getColumn(5).setMinWidth(110);
            tabla.getColumnModel().getColumn(5).setPreferredWidth(110);
            tabla.getColumnModel().getColumn(5).setMaxWidth(110);
        }

        rSButtonIconDos2.setBackground(new java.awt.Color(0, 102, 51));
        rSButtonIconDos2.setBackgroundHover(new java.awt.Color(0, 204, 51));
        rSButtonIconDos2.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.RESTORE);
        rSButtonIconDos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonIconDos2ActionPerformed(evt);
            }
        });

        barra.setForeground(new java.awt.Color(0, 102, 102));
        barra.setToolTipText("");
        barra.setColorBorde(new java.awt.Color(0, 102, 102));
        barra.setColorSelBackground(new java.awt.Color(0, 102, 102));
        barra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        barra.setGrosorBorde(1);
        barra.setString("Actualizando y Sincronizando registos con la base de Datos");
        barra.setVelocidad(40);

        panelDatos.setBackground(new java.awt.Color(255, 255, 255));
        panelDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Información Personal del Paciente Seleccionado", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 2, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setText("Nombre Completo:");

        nombrePacienteLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        nombrePacienteLabel.setText("jLabel5");

        fnacPacienteLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        fnacPacienteLabel.setText("jLabel5");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setText("Fecha Nac.:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel6.setText("Código Paciente:");

        codigoPacienteLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        codigoPacienteLabel.setText("jLabel5");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setText("Genero:");

        generoPacienteLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        generoPacienteLabel.setText("jLabel5");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setText("Telefono:");

        telefonoPacienteLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        telefonoPacienteLabel.setText("jLabel5");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel9.setText("Grupo Vulnerable:");

        grupoVulnerableLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        grupoVulnerableLabel.setText("jLabel5");

        rSButtonRoundEffect1.setText("Colocar Cita / Posponer Cita / Cancelar Cita");
        rSButtonRoundEffect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonRoundEffect1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nombrePacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fnacPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codigoPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(generoPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(telefonoPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(grupoVulnerableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rSButtonRoundEffect1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addComponent(nombrePacienteLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fnacPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(codigoPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generoPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(telefonoPacienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(grupoVulnerableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(rSButtonRoundEffect1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelCentralLayout = new javax.swing.GroupLayout(panelCentral);
        panelCentral.setLayout(panelCentralLayout);
        panelCentralLayout.setHorizontalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(panelCentralLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rSButtonIconDos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listaEsperaRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(todosRadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(barra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelCentralLayout.setVerticalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCentralLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listaEsperaRadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(todosRadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(rSButtonIconDos2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barra, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCentral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseEntered
        btnSalir.setContentAreaFilled(true);
    }//GEN-LAST:event_btnSalirMouseEntered

    private void btnSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseExited
        btnSalir.setContentAreaFilled(false);
    }//GEN-LAST:event_btnSalirMouseExited

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
        //if (JOptionPane.showConfirmDialog(rootPane, "¿Cerrar ventana?", "Cerrar Ventana", JOptionPane.YES_NO_OPTION) == 0) {

        // }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void rSButtonIconDos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonIconDos2ActionPerformed
        barra.setVisible(true);
        new Thread(new Runnable() {
            @Override
            public void run() {
                actualizarValores();
            }
        }).start();

    }//GEN-LAST:event_rSButtonIconDos2ActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        panelDatos.setVisible(false);
        if (evt.getClickCount() == 2 && tabla.getSelectedRow() >= 0) {
            String estado = tabla.getValueAt(tabla.getSelectedRow(), 3).toString();
            // if (!estado.equalsIgnoreCase("Activo")) {
            // new rojerusan.RSNotifyFade("Usuario Inactivo", "Debe seleccionar un terapeuta que se encuentre activo", 5,
            //          RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

            // } else {
            int idPaciente = Integer.parseInt(tabla.getValueAt(tabla.getSelectedRow(), 0).toString());

            for (Paciente paciente : pacientes) {
                if (Float.compare(paciente.getId(), idPaciente) == 0) {
                    if (uso.equalsIgnoreCase("Cambiar paciente notaEvolucion")) {
                        notaEvo.setPaciente(paciente);
                        break;
                    } else if (uso.equalsIgnoreCase("ver mi lista de espera")) {
                        new newNotaEvolucion(index,paciente, "Primera Sesión").setVisible(true);
                        break;
                    }
                }
            }
            //}
        } else if (evt.getClickCount() == 1 && tabla.getSelectedRow() >= 0) {

            int idPaciente = Integer.parseInt(tabla.getValueAt(tabla.getSelectedRow(), 0).toString());
            panelDatos.setVisible(true);
            for (Paciente paciente : pacientes) {
                if (Float.compare(paciente.getId(), idPaciente) == 0) {
                    nombrePacienteLabel.setText(paciente.getNombreCompleto());
                    fnacPacienteLabel.setText(paciente.getFechaNacimiento());
                    codigoPacienteLabel.setText(paciente.getCodigo());
                    generoPacienteLabel.setText(paciente.getGenero());
                    telefonoPacienteLabel.setText(paciente.getTelefono());
                    grupoVulnerableLabel.setText(paciente.getGrupoVulnerable());
                }
            }
        }
    }//GEN-LAST:event_tablaMouseClicked

    private void nombreTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTxtKeyReleased
        llenarTabla();
    }//GEN-LAST:event_nombreTxtKeyReleased

    private void rSButtonRoundEffect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonRoundEffect1ActionPerformed
        if (listaEsperaRadio.isSelected()) {
            for (Paciente paciente : pacientes) {
                for (RegistroPaciente rp : paciente.getRegistros()) {//Asignación de Cita
                    if (rp.getAccionRP().toLowerCase().contains("Lista de Espera")
                            && rp.getEstadoRP().equalsIgnoreCase("activo")
                            && Float.compare(rp.getIdUsuarioAsignado(), index.getUser().getId()) == 0) {

                        break;
                    }
                }

            }
        } else {
            for (Paciente paciente : pacientes) {
                for (RegistroPaciente rp : paciente.getRegistros()) {//Asignación de Cita
                    if (rp.getAccionRP().toLowerCase().contains("Asignación de Cita")
                            && rp.getEstadoRP().equalsIgnoreCase("activo")
                            && Float.compare(rp.getIdUsuarioAsignado(), index.getUser().getId()) == 0) {

                        break;
                    }
                }

            }
        }
    }//GEN-LAST:event_rSButtonRoundEffect1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarPacientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static rojeru_san.rsprogress.RSProgressBarAnimated barra;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel codigoPacienteLabel;
    private javax.swing.JLabel fnacPacienteLabel;
    private javax.swing.JLabel generoPacienteLabel;
    private javax.swing.ButtonGroup grupo1;
    private javax.swing.JLabel grupoVulnerableLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static rojerusan.RSRadioButton listaEsperaRadio;
    private javax.swing.JLabel nombrePacienteLabel;
    private static rojeru_san.rsfield.RSTextFullRound nombreTxt;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JPanel panelDatos;
    private RSMaterialComponent.RSButtonIconDos rSButtonIconDos2;
    private rojeru_san.rsbutton.RSButtonRoundEffect rSButtonRoundEffect1;
    private static rojerusan.RSTableMetro tabla;
    private javax.swing.JLabel telefonoPacienteLabel;
    private static rojerusan.RSRadioButton todosRadio;
    // End of variables declaration//GEN-END:variables

    private void actualizarValores() {
        pacientes.clear();
        barra.setVisible(true);

        if (uso.equalsIgnoreCase("ver mi lista de espera")) {
            todosRadio.setVisible(false);
            listaEsperaRadio.setSelected(true);
            pacientes = (ArrayList) new Paciente().ListarPacienteconRegistros().clone();

            panelDatos.setVisible(true);

            //ListarPacienteconRegistros
        } else {
            pacientes = listaEsperaRadio.isSelected()
                    ? (ArrayList) new Paciente().getPacientedeTerapeuta(index.getUser().getId(), "", "1990/01/01", "2100/12/31").clone()
                    : (ArrayList) new Paciente().getPacientexNombre("").clone();

        }

        llenarTabla();
    }

    private void llenarTabla() {
        String texto = nombreTxt.getText().isEmpty() ? "" : nombreTxt.getText();
        modelo.setRowCount(0);
        if (uso.equalsIgnoreCase("ver mi lista de espera")) {
            if (listaEsperaRadio.isSelected()) {
                for (Paciente paciente : pacientes) {
                    for (RegistroPaciente rp : paciente.getRegistros()) {//Asignación de Cita
                        if (rp.getAccionRP().toLowerCase().contains("Lista de Espera")
                                && rp.getEstadoRP().equalsIgnoreCase("activo")
                                && Float.compare(rp.getIdUsuarioAsignado(), index.getUser().getId()) == 0) {
                            if (paciente.getNombreCompleto().contains(texto) || paciente.getCodigo().contains(texto)) {
                                modelo.addRow(new Object[]{
                                    paciente.getId(), paciente.getCodigo(), paciente.getNombreCompleto(),
                                    paciente.getSrqIngreso(), paciente.getTelefono(), "-"
                                });
                            }

                            break;
                        }
                    }

                }
            } else {
                for (Paciente paciente : pacientes) {
                    for (RegistroPaciente rp : paciente.getRegistros()) {//Asignación de Cita
                        if (rp.getAccionRP().toLowerCase().contains("Asignación de Cita")
                                && rp.getEstadoRP().equalsIgnoreCase("activo")
                                && Float.compare(rp.getIdUsuarioAsignado(), index.getUser().getId()) == 0) {
                            if (paciente.getNombreCompleto().contains(texto) || paciente.getCodigo().contains(texto)) {
                                modelo.addRow(new Object[]{
                                    paciente.getId(), paciente.getCodigo(), paciente.getNombreCompleto(),
                                    paciente.getSrqIngreso(), paciente.getTelefono(), rp.getFechaAsignada()
                                });
                            }

                            break;
                        }
                    }

                }
            }

        } else {
            for (Paciente paciente : pacientes) {
                if (paciente.getNombreCompleto().contains(texto) || paciente.getCodigo().contains(texto)) {
                    modelo.addRow(new Object[]{
                        paciente.getId(), paciente.getCodigo(), paciente.getNombreCompleto(), paciente.getTotalSesiones()
                    });
                }
            }
        }

        barra.setVisible(false);
    }

}
